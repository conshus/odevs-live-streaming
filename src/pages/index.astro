---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";

const response = await fetch(
	Astro.url.origin + "/.netlify/functions/get_settings"
);
const settings = await response.json();
console.log("data: ", settings);
const events = settings.events;
events.sort((a, b) => a.timeInMs - b.timeInMs);
---

<Layout title="Welcome to our events.">
	<main>
		<section id="events-container">
			{
				events.map((event) => (
					<div>
						{event.title}
						<br />
						<dwane-timer timer-deadline={event.timeInMs} />
						<details>
							<summary>Description</summary>
							{event.description}
						</details>
						<a href=`/${event.timeInMs}`>Join</a>
					</div>
				))
			}
		</section>
	</main>
</Layout>

<script>
	import "@lifelongdev/dwane-timer/dwane-timer.js";
</script>

<script is:inline>
let settings = {};
let events = [];

function loadEvents() {
	const eventsContainer = document.querySelector("#events-container");
	eventsContainer.innerHTML = "";
	events.sort((a, b) => a.timeInMs - b.timeInMs);
	events.map((event) => {
		eventsContainer.innerHTML += `${event.title}
			<br/><dwane-timer timer-deadline="${event.timeInMs}"></dwane-timer>
			<details>
                    <summary>Description</summary>
                    ${event.description}
			</details>
			<a href="/${event.timeInMs}">Join</a><br/><br/>`;
	});
}

// (async function () {
// 	try {
// 		// get settings file
// 		const settingsResponse = await fetch(
// 			`/.netlify/functions/get_settings`,
// 		);
// 		settings = await settingsResponse.json();
// 		events = settings.events;
// 		loadEvents();
// 	} catch (error) {
// 		console.error(error);
// 	}
// })();
</script>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
